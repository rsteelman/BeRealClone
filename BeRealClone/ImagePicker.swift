import SwiftUIimport UIKitstruct ImagePicker: UIViewControllerRepresentable {    @Binding var selectedImage: UIImage?    @Binding var imageMetadata: [String: Any]?    @Environment(\.presentationMode) var presentationMode    var sourceType: UIImagePickerController.SourceType        func makeUIViewController(context: Context) -> UIImagePickerController {        let picker = UIImagePickerController()        picker.sourceType = sourceType        picker.delegate = context.coordinator        picker.allowsEditing = false        return picker    }        func updateUIViewController(_ uiViewController: UIImagePickerController, context: Context) {}        func makeCoordinator() -> Coordinator {        Coordinator(self)    }        class Coordinator: NSObject, UIImagePickerControllerDelegate, UINavigationControllerDelegate {        let parent: ImagePicker                init(_ parent: ImagePicker) {            self.parent = parent        }                func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [UIImagePickerController.InfoKey : Any]) {            picker.dismiss(animated: true)                        // Get the image            if let image = info[.originalImage] as? UIImage {                parent.selectedImage = image                                // Extract metadata from the image                if let imageURL = info[.imageURL] as? URL,                   let imageSource = CGImageSourceCreateWithURL(imageURL as CFURL, nil),                   let imageProperties = CGImageSourceCopyPropertiesAtIndex(imageSource, 0, nil) as? [String: Any] {                    parent.imageMetadata = imageProperties                } else if let image = info[.originalImage] as? UIImage,                          let imageData = image.jpegData(compressionQuality: 1.0),                          let imageSource = CGImageSourceCreateWithData(imageData as CFData, nil),                          let imageProperties = CGImageSourceCopyPropertiesAtIndex(imageSource, 0, nil) as? [String: Any] {                    parent.imageMetadata = imageProperties                }            }        }                func imagePickerControllerDidCancel(_ picker: UIImagePickerController) {            picker.dismiss(animated: true)        }    }}